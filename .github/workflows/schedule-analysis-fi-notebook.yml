name: Process Data from Stooq

on:
  workflow_dispatch:  # Allows manual trigger
  schedule:
    - cron: "0 2 * * *"  # Runs daily at 2 AM UTC

jobs:
  process-data:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"  # Matches your local Python version

      - name: Install dependencies
        run: |
          
          pip install --no-cache-dir pandas numpy requests beautifulsoup4 selenium webdriver-manager
      
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt update || true
          sudo apt install -y --no-install-recommends ca-certificates curl || true
          sudo apt install -y --no-install-recommends google-chrome-stable || true
          
          # Install ChromeDriver manually if needed
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          DRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget -q "https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
             # Use WebDriver Manager (Recommended)
          python -c "from webdriver_manager.chrome import ChromeDriverManager; print(ChromeDriverManager().install())"

      - name: Run data processing script
        env:
          PATH: /usr/local/bin:$PATH
          
      - name: Create Google Credentials File
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > /tmp/credentials.json
          cat /tmp/credentials.json | head -n 10  # Debug: Print first 10 lines
     
      - name: Validate JSON Format
        run: |
              python -c "import json; json.load(open('/tmp/credentials.json'))" && echo "JSON is valid."
     
      - name: Execute Notebook
        
       
          
        run: |
          # Here, use your Python script or notebook, and load credentials
          python -c "from google.oauth2 import service_account; creds = service_account.Credentials.from_service_account_file('/tmp/credentials.json', scopes=['https://www.googleapis.com/auth/drive'])"
      

        
          
          papermill download_FI.ipynb output.ipynb

      - name: Upload Output Notebook as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: executed-notebook
          path: output.ipynb
