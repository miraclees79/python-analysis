name: Process Data from Stooq

on:
  workflow_dispatch:  # Allows manual trigger
  schedule:
    - cron: "0 2 * * *"  # Runs daily at 2 AM UTC

jobs: 
  process-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"  # Matches your local Python version

      - name: Install dependencies
        run: |
    
          pip install --no-cache-dir pandas numpy requests beautifulsoup4 selenium webdriver-manager google-api-python-client jupyter papermill
      
      - name: Install additional dependencies for Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libx11-xcb1 \
          libnss3 \
          libxss1 \
          libappindicator3-1 \
          libatk-bridge2.0-0 \
          libgtk-3-0 \
          libdbus-glib-1-2 \
          libxtst6 \
          libgbm-dev \
          libasound2-plugins \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          xdg-utils \
          fonts-liberation \
          libu2f-udev  
      - name: Install Chrome and ChromeDriver
        run: |
          # Install Google Chrome
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y
          sudo apt-get install -y google-chrome-stable chromium-chromedriver
          rm google-chrome-stable_current_amd64.deb
      - name: Debug Chrome and ChromeDriver
        run: |
          which google-chrome
          google-chrome --version
          which chromedriver
          chromedriver --version
      
     
      - name: Create Google Credentials File
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > /tmp/credentials.json
          cat /tmp/credentials.json | head -n 10  # Debug: Print first 10 lines
     
      - name: Validate JSON Format
        run: |
              python -c "import json; json.load(open('/tmp/credentials.json'))" && echo "JSON is valid."
     
      - name: Execute Notebook
        env:
          PATH: /usr/local/bin:$PATH
        run: |
            # Here, use your Python script or notebook, and load credentials
            python -c "from google.oauth2 import service_account; creds = service_account.Credentials.from_service_account_file('/tmp/credentials.json', scopes=['https://www.googleapis.com/auth/drive'])"
            papermill download_FI.ipynb output.ipynb

      - name: Upload Output Notebook as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: executed-notebook
          path: output.ipynb
